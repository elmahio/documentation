# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - '**/*.md'

pool:
  vmImage: ubuntu-latest

variables:
  githubRepo: 'https://github.com/elmahio/documentation.git'
  azureRepo: 'https://elmahio.visualstudio.com/elmah.io/_git/elmah.io.devcli'
  toolFolder: 'tool' # Directory to clone the tool

steps:
  - task: GitClone@2
    inputs:
      RepositoryURL: 'https://github.com/elmahio/documentation.git'
      Branch: 'main'
      FallbackBranch: 'main'
      BaseBranch: 'main'
      Clean: true

  # Step 2: Identify updated Markdown files
  - script: |
      echo "## Identifying updated Markdown files..."
      git diff --name-only --diff-filter=AMR $(Build.SourceVersion) | grep '\.md$' > updated-files.txt
      cat updated-files.txt
    displayName: 'Get Updated Markdown Files'
    continueOnError: false

  # Step 3: Clone and build the tool repository
  - script: |
      echo "## Cloning the tool repository..."
      git clone $(azureRepo) $(toolFolder)
    displayName: 'Clone Tool Repository'

  - script: |
      echo "## Building the tool..."
      cd $(toolFolder)
      dotnet build --configuration Release
    displayName: 'Build Tool'

  # Step 4: Run the tool for each updated Markdown file
  - script: |
      echo "## Processing Markdown files..."
      while IFS= read -r file; do
        echo "Processing $file..."
        cd $(toolFolder)
        dotnet run -- documentation vectorize --input "../$file"
      done < updated-files.txt
    displayName: 'Run Tool on Updated Files'
    failOnStderr: true